# -*- coding: utf-8 -*-
require '../rubytex'

documentclass "article", options: "a4paper,11pt"

# Packages
usepackage "inputenc", options: "utf8"
usepackage "color", options: "usenames,dvipsnames"
usepackage "graphicx"
usepackage "caption", options: "justification=centering,labelfont=bf"
usepackage "listings"
usepackage "hyperref", options: "hidelinks"

# Variables
assignatura = "Parallelism"
titol = "Lab 1: Embarrassingly parallelism with OpenMP: Mandelbrot set"
autors = ["Héctor Ramón Jiménez", "Alvaro Espuña Buxo"]

document do
  titlepage do
    center do
      textsc "\\Large #{assignatura}"; br
      texttt 1202; br 1.5
      hrule; br 0.4
      wrap { huge; bfseries; puts titol; br 0.4 }
      hrule; br 2.5

      minipage "0.4\\textwidth" do
        flushleft { large; puts autors[0] }
      end

      minipage "0.4\\textwidth" do
        flushright { large; puts autors[1] }
      end

      vfill
      wrap { large; today }
      br
      wrap { large; texttt "Facultat d'Informàtica de Barcelona" }
    end
  end

  section "Reading activity"
  p "In this first part of the report we first briefly describe the basic formulation for the \\textbf{Mandelbrot set}
    (see \\ref{mandelbrot:references}) and then its implementation in the sequential code available (\\texttt{mandel-serial.c})."

  subsection "Description"
  p "The \\textbf{Mandelbrot set} is a particular set of points in the complex domain named after the mathematician
    \\textbf{Benoit Mandelbrot}, who studied it and popularized it. The \\textbf{Mandelbrot set}'s boundary is an easily
    recognizable two-dimensional fractal shape (see figure \\ref{mandelbrot:boundary})."

  figure do
    graphic "figures/mandelbrot_boundary.jpg"
    caption "The Mandelbrot set boundary"
    label "mandelbrot:boundary"
  end

  br

  p "Mandelbrot set images are made by sampling complex numbers and determining for each whether the result
    \\textbf{tends towards infinity} when a particular mathematical operation is \\textbf{iterated} on it. The real
    and imaginary parts of each number are treated as image coordinates. The pixels are colored according to how rapidly
    the sequence diverges."
    br

  p "More precisely, the \\textbf{Mandelbrot set} is the set of values of $c$ in the complex plane for which the orbit of
    $0$ under iteration of the complex quadratic polynomial $z_{n+1} = z^2_n + c$ remains bounded."

  subsection "Algorithm"
  p "The simplest algorithm for drawing a picture of the Mandelbrot set is the following. We \\textbf{discretize} the
    complex space in a set of points and each point corresponds to a \\textbf{pixel} in a two dimensional plot. To color
    any such pixel, let $c$ (represented by the complex variable $c$ at the \\texttt{mandel-serial.c}
    code) be the midpoint of that pixel. Then we calculate $z_0$, $z_1$, ... (stored in the complex variable
    $z$) and beyond until \\textbf{divergence} occurs or
    the \\textbf{maximum number of iterations} is reached. We assume that divergence happens when the resulting complex
    $z_j$ is \\textbf{not contained in the problem space}. More precisely, let the problem space be
    $\\{ (r, i) \\: | -\\!N < r < N, \\: -N < i < N \\}$, then divergence occurs when:"

    math do
      p "length(z_j) \\geq N"
    end

  br

  p "The \\textbf{intensity of the color} of the point $c$ is directly proportional to the \\textbf{number of iterations performed}
    $k_c$ without divergence. Thus the points that belong to the \\textbf{Mandelbrot set} are going to be the most intense ones
    (usually black color). That can be easily done calculating the \\texttt{scale\\_color} variable, which is the factor that needs
    to be applied to the \\texttt{min\\_color} for every performed iteration:"

    math do
      p "\\texttt{scale\\_color}"
      equals
      frac "\\texttt{max\\_color} - \\texttt{min\\_color}", "\\texttt{maxiter} - 1"
    end

    math do
      p "\\texttt{color}"
      equals
      p "(k_c - 1) \\cdot \\texttt{scale\\_color} + \\texttt{min\\_color}"
    end

  subsection "References"
  label "mandelbrot:references"

  enumerate do
    item "Mandelbrot set - Wikipedia, the free encyclopedia. [Internet]. url:
    \\url{http://en.wikipedia.org/wiki/Mandelbrot\\_set} (visited on Apr 23, 2014)."
  end

  clearpage

  class Float
    def to_s
      "%.3f" % self # Just 3 decimals please
    end
  end

  section "Task granularity analysis"

  enumerate do
    question "Which are the two most important common
    characteristics of the task graphs generated for the two task
    granularities (\\emph{Row} and \\emph{Point}) for
    \\textbf{mandel-tareador}?  Include the task graphs that are
    generated in both cases for \\texttt{-w 8}."
    br
    p "There are no data dependencies between tasks."

    figure do
      graphic "figures/point_deps_mandel.pdf"
      caption "Task decomposition with \\emph{Point} granularity."
      label "figure:mandel-point"
    end

    figure do
      graphic "figures/row_deps_mandel.pdf"
      caption "Task decomposition with \\emph{Row} granularity."
      label "figure:mandel-row"
    end

    question "Which section of the code is causing the serialization of
    all tasks in mandeld-tareador? Include the task graph generated for
    the graphical version of Point after isolating the section of the
    code"

    question "Using the results obtained from the simulated parallel
    execution for mandel-tareador and for a size of -w 16, complete the
    following table with the execution time and speed-up (with respect to
    the execution with 1 processor) obtained for the non-graphical
    version, for both individual task granularities. Comment the results
    highlighting the reason for the poor scalability, if detected?"
  end

  clearpage

  section "OpenMP execution analysis"

  enumerate do
    question "For each parallelization strategy of the non-graphical version, complete the following table with
    the execution time for different loop schedules and number of threads, reasoning about the results
    that are obtained."

    rows = [
      [1, 30.207, 30.207, 30.207, 30.207],
      [2, 15.2227, 15.2333, 15.206, 15.2237],
      [4, 15.2283, 7.71504, 7.61174, 16.6542],
      [6, 14.7159, 5.39143, 5.33425, 11.4375],
      [8, 12.7566, 4.0251, 4.02479, 8.14678],
      [10, 10.9242, 3.36377, 3.3757, 7.12668],
      [12, 9.58021, 2.80187, 2.81733, 6.00559]
    ]

    center do
      tabular "| c || c | c | c | c |" do
        head "Num. threads", "static", "static, 1", "dynamic, 1", "guided, 1"
        hline
        rows.each {|r| row *r}
        hline
      end
    end

    p "[...]"

    question "For each parallelization strategy, complete the following table with the information extracted from
    the Extrae instrumented executions with 8 threads and analysis with Paraver, reasoning about the
    results that are obtained."

    cols = [
      {:avg => 3.8, :max => 12.763},
      {:avg => 3.815, :max => 12.802},
      {:avg => 3.804, :max => 12.683}
    ]

    center do
      tabular "| c || c | c | c | c |" do
        head "", "static", "static, 1", "dynamic, 1", "guided, 1"
        hline
        row "Running avg. time per thread (s)", *cols.map {|c| c[:avg]}
        row "Execution unbalance (s)", *cols.map{|c| c[:avg] / c[:max]}
        row "SchedForkJoin ($\\mu s$)", 85.227, 1.599, 1.584, ""
        hline
      end
    end

    p "[...]"
  end

end
